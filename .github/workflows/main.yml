name: Test Workflow
'on':
  workflow_dispatch: null
  push:
    branches:
      - main
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: false
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
      - name: Test with Gradle
        run: |
          chmod +x ./gradlew 
          bash ./gradlew test
        continue-on-error: true
      - name: Upload JUnit test results
        uses: actions/upload-artifact@v2
        with:
          name: junit-test-results
          path: build/test-results/test
  report:
    name: Generate Report
    needs: test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download JUnit test results
        uses: actions/download-artifact@v2
        with:
          name: junit-test-results
      - name: Publish JUnit test report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/test-*.xml'
  publish:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: adopt
      - name: Make gradlew executable
        run: chmod +x ./gradlew 
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      - name: Publish package
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        with:
           arguments: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: '${{ runner.os }}-sonar'
          restore-keys: '${{ runner.os }}-sonar'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: '${{ runner.os }}-gradle-${{ hashFiles(''**/*.gradle'') }}'
          restore-keys: '${{ runner.os }}-gradle'
      - name: Build and analyze
        #echo "build succcesfull"
        run: bash ./gradlew build --refresh-dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          name: SonarQube Scan
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
          java-version: '11'
          distribution: adopt
    - name: Set Default Branch
      run: |
          chmod +x ./gradlew 
          bash ./gradlew sonarqube -Dsonar.branch.name=main
    - name: Checking out
      uses: actions/checkout@master
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONAR_HOST }}
        login: ${{ secrets.SONAR_TOKEN }}
        

