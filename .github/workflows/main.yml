name: Test Workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Test with Gradle
        run: ./gradlew test
        continue-on-error: true

      - name: Upload JUnit test results
        uses: actions/upload-artifact@v2
        with:
          name: junit-test-results
          path: build/test-results/test

  report:
    name: Generate Report
    needs: test
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download JUnit test results
        uses: actions/download-artifact@v2
        with:
          name: junit-test-results

      - name: Publish JUnit test report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/TEST-*.xml'

  publish:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Validate Gradle wrapper
         echo "publish"
        #uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
      #- name: Publish package
       # uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        #with:
          #arguments: publish
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
         echo "run sonar"
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #run: ./gradlew build sonar --info


  pages:
    name: Generate pages
    needs:
      - report
      - publish
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install tree
        run: sudo apt update && sudo apt install tree -y

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Generate report
        run: | 
          rm -rf public
          ./gradlew test
          ./gradlew htmlDependencyReport
          ./gradlew javadoc
          ./gradlew generateLicenseReport
          test_report_dir="build/reports/tests/"
          dep_report_dir="build/reports/project/dependencies/"
          javadoc_report_dir="build/docs/javadoc/"
          license_report_dir="build/reports/dependency-license/"
          mkdir -p public
          [ -d "$test_report_dir" ] && mv "$test_report_dir" public/test_report/
          [ -d "$dep_report_dir" ] && mv "$dep_report_dir" public/dep_report/
          [ -d "$javadoc_report_dir" ] && mv "$javadoc_report_dir" public/javadoc/
          [ -d "$license_report_dir" ] && mv "$license_report_dir" public/license/
          cd public/
          tree -C -H "." -P "index.html" --prune --noreport -o index.html
          cd ../

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
